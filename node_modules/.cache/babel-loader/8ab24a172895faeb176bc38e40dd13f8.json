{"ast":null,"code":"var _jsxFileName = \"/Users/naomihaser/Desktop/newcovid/covid_tracker/src/components/Table/Table.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport { fetchDailyData } from '../../api';\nimport styles from './Table.module.css';\n\nconst dataSource = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const columns = [{\n    title: 'Country',\n    dataIndex: 'name',\n    key: 'country'\n  }, {\n    title: 'Confirmed Cases',\n    dataIndex: 'confirmed_cases',\n    key: 'confirmed_cases',\n    sorter: {\n      compare: (a, b) => a.confirmed_cases - b.confirmed_cases,\n      multiple: 3\n    }\n  }, {\n    title: 'Deaths',\n    dataIndex: 'death',\n    key: 'death',\n    sorter: {\n      compare: (a, b) => a.death - b.death,\n      multiple: 3\n    }\n  }, {\n    title: 'Recovered',\n    dataIndex: 'recovered',\n    key: 'recovered',\n    sorter: {\n      compare: (a, b) => a.recovered - b.recovered,\n      multiple: 3\n    }\n  }]; // <Table dataSource={dataSource} columns={columns} />;\n\n  ReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n    dataSource: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ColumnGroup, {\n    title: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: \"First Name\",\n    dataIndex: \"firstName\",\n    key: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Last Name\",\n    dataIndex: \"lastName\",\n    key: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Column, {\n    title: \"Age\",\n    dataIndex: \"age\",\n    key: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    key: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Tags\",\n    dataIndex: \"tags\",\n    key: \"tags\",\n    render: tags => /*#__PURE__*/React.createElement(React.Fragment, null, tags.map(tag => /*#__PURE__*/React.createElement(Tag, {\n      color: \"blue\",\n      key: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, tag))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Action\",\n    key: \"action\",\n    render: (text, record) => /*#__PURE__*/React.createElement(Space, {\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Invite \", record.lastName), /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Delete\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })), mountNode);\n};","map":{"version":3,"sources":["/Users/naomihaser/Desktop/newcovid/covid_tracker/src/components/Table/Table.jsx"],"names":["React","useState","useEffect","Table","fetchDailyData","styles","dataSource","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","columns","title","dataIndex","key","sorter","compare","a","b","confirmed_cases","multiple","death","ReactDOM","render","tags","map","tag","text","record","lastName","mountNode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Table} from 'antd';\nimport { fetchDailyData } from '../../api';\nimport styles from './Table.module.css';\n\nconst dataSource = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n    useEffect(() => {\n      const fetchMyAPI = async () => {\n        const initialDailyData = await fetchDailyData();\n        setDailyData(initialDailyData);\n      };\n      fetchMyAPI();\n    }, []);\n    const columns = [\n    {\n      title: 'Country',\n      dataIndex: 'name',\n      key: 'country',\n    },\n    {\n      title: 'Confirmed Cases',\n      dataIndex: 'confirmed_cases',\n      key: 'confirmed_cases',\n      sorter: {\n        compare: (a, b) => a.confirmed_cases - b.confirmed_cases,\n        multiple: 3,\n      },\n    },\n    {\n      title: 'Deaths',\n      dataIndex: 'death',\n      key: 'death',\n      sorter: {\n        compare: (a, b) => a.death - b.death,\n        multiple: 3,\n      },\n    },\n    {\n      title: 'Recovered',\n      dataIndex: 'recovered',\n      key: 'recovered',\n      sorter: {\n        compare: (a, b) => a.recovered - b.recovered,\n        multiple: 3,\n      },\n    },\n  ];\n  // <Table dataSource={dataSource} columns={columns} />;\n  ReactDOM.render(\n    <Table dataSource={data}>\n      <ColumnGroup title=\"Name\">\n        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\n        <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\n      </ColumnGroup>\n      <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\n      <Column title=\"Address\" dataIndex=\"address\" key=\"address\" />\n      <Column\n        title=\"Tags\"\n        dataIndex=\"tags\"\n        key=\"tags\"\n        render={tags => (\n          <>\n            {tags.map(tag => (\n              <Tag color=\"blue\" key={tag}>\n                {tag}\n              </Tag>\n            ))}\n          </>\n        )}\n      />\n      <Column\n        title=\"Action\"\n        key=\"action\"\n        render={(text, record) => (\n          <Space size=\"middle\">\n            <a>Invite {record.lastName}</a>\n            <a>Delete</a>\n          </Space>\n        )}\n      />\n    </Table>,\n    mountNode,\n  );\n};"]},"metadata":{},"sourceType":"module"}