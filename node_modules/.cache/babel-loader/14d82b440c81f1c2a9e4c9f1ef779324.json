{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nexport const fetchAllData = async () => {\n  try {\n    const {\n      countries\n    } = axios.get(`${url}/countries`);\n    return countries;\n  } catch (error) {\n    return [];\n  }\n};\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    return data.map(({\n      confirmed,\n      deaths,\n      reportDate: date\n    }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date\n    }));\n  } catch (error) {\n    return {\n      data: [],\n      message: \"Could not fetch the data\" + \" \" + error\n    };\n    return error;\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["/Users/naomihaser/Desktop/newcovid/covid_tracker/src/api/index.js"],"names":["axios","url","fetchAllData","countries","get","error","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","reportDate","date","total","message","fetchCountries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAgBH,KAAK,CAACI,GAAN,CAAW,GAAEH,GAAI,YAAjB,CAAtB;AACA,WAAOE,SAAP;AACD,GAHD,CAGE,OAAME,KAAN,EAAa;AACb,WAAO,EAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AAC1C,MAAIC,aAAa,GAAGP,GAApB;;AAEA,MAAIM,OAAJ,EAAa;AACXC,IAAAA,aAAa,GAAI,GAAEP,GAAI,cAAaM,OAAQ,EAA5C;AACD;;AAED,MAAI;AACF,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAR,QAAyD,MAAMb,KAAK,CAACI,GAAN,CAAUI,aAAV,CAArE;AAEA,WAAO;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACD,GAJD,CAIE,OAAOR,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMS,cAAc,GAAG,YAAY;AACxC,MAAI;AAEF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACI,GAAN,CAAW,GAAEH,GAAI,QAAjB,CAAvB;AAEA,WAAOQ,IAAI,CAACM,GAAL,CAAS,CAAC;AAAEL,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBI,MAAAA,UAAU,EAAEC;AAAjC,KAAD,MAA8C;AAAEP,MAAAA,SAAS,EAAEA,SAAS,CAACQ,KAAvB;AAA8BN,MAAAA,MAAM,EAAEA,MAAM,CAACM,KAA7C;AAAoDD,MAAAA;AAApD,KAA9C,CAAT,CAAP;AACD,GALD,CAKE,OAAOZ,KAAP,EAAc;AACd,WAAO;AACLI,MAAAA,IAAI,EAAE,EADD;AAELU,MAAAA,OAAO,EAAE,6BAA6B,GAA7B,GAAmCd;AAFvC,KAAP;AAIA,WAAOA,KAAP;AACD;AACF,CAbM;AAeP,OAAO,MAAMe,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAEX,MAAAA,IAAI,EAAE;AAAEN,QAAAA;AAAF;AAAR,QAA0B,MAAMH,KAAK,CAACI,GAAN,CAAW,GAAEH,GAAI,YAAjB,CAAtC;AAEA,WAAOE,SAAS,CAACY,GAAV,CAAeR,OAAD,IAAaA,OAAO,CAACc,IAAnC,CAAP;AACD,GAJD,CAIE,OAAOhB,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CARM","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchAllData = async () => {\n  try {\n    const { countries } = axios.get(`${url}/countries`);\n    return countries;\n  } catch(error) {\n    return [];\n  }\n}\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return {\n      data: [],\n      message: \"Could not fetch the data\" + \" \" + error\n    }\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}